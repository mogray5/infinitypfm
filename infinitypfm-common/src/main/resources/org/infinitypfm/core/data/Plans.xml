<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright (c) 2005-2023 Wayne Gray All rights reserved This file is 
	part of Infinity PFM. Infinity PFM is free software: you can redistribute 
	it and/or modify it under the terms of the GNU General Public License as 
	published by the Free Software Foundation, either version 3 of the License, 
	or (at your option) any later version. Infinity PFM is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU General Public License for more details. You should have received a copy 
	of the GNU General Public License along with Infinity PFM. If not, see <http://www.gnu.org/licenses/>. -->


<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Plans">

   <insert id="insertPlan" parameterType="plan">
		INSERT INTO PLANS
		( 
			PLANNAME, 
			STARTBALANCE, 
			STARTAGE
		)
		VALUES 
		( 
			#{planName}, 
			#{startBalance}, 
			#{startAge}
		)
   </insert>

   <insert id="insertPlanEvent" parameterType="planEvent">
		INSERT INTO PLANEVENTS
		( 
			PLANID,
			EVENTTYPEID,
			EVENTNAME,
			EVENTVALUE,
			EVENTVALUETYPE,
			STARTAGE,
			ENDAGE
		)
		VALUES 
		( 
			#{planID}, 
			#{eventTypeId}, 
			#{eventName},
			#{eventValue},
			#{eventValueType},
			#{startAge},
			#{endAge}
		)
   </insert>

   <insert id="insertPlanEventType" parameterType="planEventType">
		INSERT INTO PlanEventTypes
		( 
			EVENTTYPENAME, 
			ALLOWAMOUNTS, 
			ALLOWPERCENTS
		)
		VALUES 
		( 
			#{eventTypeName}, 
			#{allowAmmounts}, 
			#{allowPercents}
		)
   </insert>

	<select id="getPlans" resultType="plan" flushCache="true">
		SELECT PlanID,
			PlanName,
			StartBalance,
			StartAge
		From Plans
		ORDER BY PlanName
	</select>
	
	<select id="getPlanByName" parameterType="java.lang.String" resultType="plan" flushCache="true">
		SELECT PlanID,
			PlanName,
			StartBalance,
			StartAge
		From Plans
		WHERE PlanName=#{value}
	</select>

	<select id="getPlanEventsById" parameterType="java.lang.Integer" resultType="planEvent" flushCache="true">
		SELECT pe.PLanID,
		pe.EventTypeID,
		pet.EventTypeName,
		pe.EventName,
		pe.EventValue,
		pe.EventValueType,
		pe.StartAge,
		pe.EndAge
		From PlanEvents pe
			INNER JOIN PlanEventTypes pet
				on pe.EventTypeID = pet.EventTypeID
		WHERE pe.PlanID=#{value}
		ORDER BY pe.EventName
	</select>

	<select id="getPlanEventsByIdAndName" parameterType="planEvent" resultType="planEvent" flushCache="true">
		SELECT pe.PLanID,
		pe.EventTypeID,
		pet.EventTypeName,
		pe.EventName,
		pe.EventValue,
		pe.EventValueType,
		pe.StartAge,
		pe.EndAge
		From PlanEvents pe
			INNER JOIN PlanEventTypes pet
				on pe.EventTypeID = pet.EventTypeID
		WHERE pe.PlanID=#{planID}
			AND pe.EventName = #{eventName}
		ORDER BY pe.EventName
	</select>

	<select id="getPlanEventsTypes" resultType="planEventType" flushCache="true">
		SELECT EventTypeID,
		EventTypeName,
		AllowAmounts,
		AllowPercents
		From PlanEventTypes
		ORDER BY EventTypeName
	</select>

    <delete id="deletePlan" parameterType="java.lang.String">
	    DELETE FROM Plans
    	  WHERE PlanName = #{value}
   </delete>

    <delete id="deletePlanEvents" parameterType="java.lang.Integer">
	    DELETE FROM PlanEvents
    	  WHERE PlanID = #{value}
   </delete>
   
   <delete id="deletePlanEventByIdAndName" parameterType="planEvent">
	    DELETE FROM PlanEvents
    	  WHERE PlanID = #{planID}
    	  	AND EventName = #{eventName}
   </delete>

</mapper>
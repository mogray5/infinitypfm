<?xml version="1.0" encoding="UTF-8" ?>
<!--

Copyright (c) 2005-2011 Wayne Gray All rights reserved
  
 This file is part of Infinity PFM.
  
 Infinity PFM is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
  
 Infinity PFM is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
  
 You should have received a copy of the GNU General Public License
 along with Infinity PFM.  If not, see <http://www.gnu.org/licenses/>.

-->


<!DOCTYPE sqlMap PUBLIC
  "-//iBATIS.com//DTD SQL Map 2.0//EN"
  "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Budget">

	<typeAlias alias="monthBalance" type="org.infinitypfm.core.data.MonthlyBalance"/>
	<typeAlias alias="budget" type="org.infinitypfm.core.data.Budget"/>
	<typeAlias alias="budgetDetail" type="org.infinitypfm.core.data.BudgetDetail"/>
	<typeAlias alias="tran" type="org.infinitypfm.core.data.Transaction"/>

  <resultMap id="budgetDetailMap" class="budgetDetail">
  	<result property="budgetId"  column="BudgetId"/>
  	<result property="actId"  column="ActId"/>
	<result property="actName"  column="ActName"/>
	<result property="mth"  column="Mth"/>
	<result property="amount"  column="Amount"/>
	<result property="actBalance"  column="ActBalance" nullValue="0"/>
	<result property="yr"  column="Yr" nullValue="0"/>
  </resultMap>
  	   
   <insert id="insertMonthlyBalance" parameterClass="tran">
	    INSERT INTO MonthlyBalance
	     (
	      ActId,
	      Yr,
	      Mth,
	      ActBalance
	     )
    	VALUES 
    	 (
    	  #actId#,
    	  #tranYear#,
    	  #tranMonth#,
     	  #tranAmount#
    	 )
   </insert>
   
   <update id="updateMonthlyBalance" parameterClass="tran">
	    UPDATE MonthlyBalance
	     SET ActBalance = ActBalance + #tranAmount#
	    WHERE ActId = #actId#
	     AND Yr=#tranYear#
	     AND Mth=#tranMonth#
   </update>
   
    <select id="getMonthlyBalance" parameterClass="tran"
                          resultClass="monthBalance">
       <![CDATA[
        SELECT
           ActId as actId,
           Yr as yr,
           Mth as mth,
           ActBalance as actBalance
        FROM MonthlyBalance
         WHERE ActId = #actId#
         AND Yr =#tranYear#
         AND Mth=#tranMonth#;
        ]]>
   </select>
   
   <select id="getYearlyBalance" parameterClass="tran"
                          resultClass="java.lang.String">
       <![CDATA[
        SELECT
           SUM(ActBalance) as actBalance
        FROM MonthlyBalance
         WHERE ActId = #actId#
         AND Yr = #tranYear#
         AND Mth <= #tranMonth#;
        ]]>
   </select>
   
   <select id="getAllBudgets" resultClass="budget">
       <![CDATA[
        SELECT
           BudgetID,
           BudgetName
        FROM Budget
         ORDER BY BudgetName;
        ]]>
   </select>
   
    <select id="getBudget" resultClass="budget">
       <![CDATA[
        SELECT
           BudgetID,
           BudgetName
        FROM Budget
         WHERE BudgetName=#value#;
        ]]>
   </select>
   
   <insert id="insertBudget" parameterClass="budget">
	    INSERT INTO Budget
	     (
	      BudgetName
	     )
    	VALUES 
    	 (
    	  #budgetName#
    	 )
   </insert>

  <insert id="insertBudgetDetail" parameterClass="budgetDetail">
  	INSERT INTO BudgetDetail (BudgetID, ActID, Mth, Amount)
	 VALUES(#budgetId#, #actId#, #mth#, #amount#)
   </insert>

   <!-- select id="getBudgetDetailForMonthWithCompare" parameterClass="budgetDetail"
                                       resultMap="budgetDetailMap">
	   SELECT BudgetId, 
	  ActId as actId,
	  ActName as actName,
	  Mth as mth,
	  Amount as amount,
      MonthlyBalance.ActBalance as actBalance,
      MonthlyBalance.Yr as yr
	 FROM BudgetDetail
	  INNER JOIN Accounts
	   ON BudgetDetail.ActId = Accounts.ActId
      LEFT OUTER JOIN MonthlyBalance
       ON BudgetDetail.ActID = MonthlyBalance.ActID 
        AND BudgetDetail.Mth = MonthlyBalance.Mth
	  WHERE BudgetDetail.Mth=#mth# AND
	   BudgetDetail.BudgetId = #budgetId# AND
           MonthlyBalance.Yr=#yr#
	  ORDER BY ActName;
   </select -->
   
   
   
    <select id="getBudgetDetailForMonth" parameterClass="budgetDetail"
                                       resultClass="budgetDetail">
	   SELECT BudgetID as budgetId, 
	  ActId as actId,
	  ActName as actName,
	  Mth as mth,
	  Amount as amount
	 FROM BudgetDetail
	  INNER JOIN Accounts
	   ON BudgetDetail.ActId = Accounts.ActId
	  WHERE BudgetDetail.Mth=#mth# AND
	   BudgetDetail.BudgetId = #budgetId# 
	  ORDER BY ActName;
   </select>
   
   <select id="getYearBudgetBalance" parameterClass="budgetDetail" resultClass="java.lang.String">
     
     <![CDATA[                                  
	 SELECT 
	  SUM(Amount) as amount
	 FROM BudgetDetail
	  INNER JOIN Accounts
	   ON BudgetDetail.ActId = Accounts.ActId
	 WHERE BudgetDetail.Mth<=#mth# AND
      BudgetDetail.BudgetId = #budgetId# AND
      BudgetDetail.ActId = #actId#;
     
	  ]]>
	  
   </select>
   
   
   
  <select id="getOverUnderForMonth" parameterClass="budgetDetail"
                                       resultClass="java.lang.String">  
   SELECT Budget.BudgetAmount - Actual.ActualAmount as MonthOverUnder
	FROM 
	(
	SELECT BudgetDetail.Mth, SUM(BudgetDetail.Amount) as BudgetAmount
	FROM BudgetDetail
	WHERE  BudgetDetail.Mth=#mth# AND
	BudgetDetail.BudgetId = #budgetId#
	GROUP BY BudgetDetail.Mth) Budget
	INNER JOIN 
	( 
	SELECT MonthlyBalance.Mth, SUM(MonthlyBalance.ActBalance) AS ActualAmount
	FROM MonthlyBalance
	INNER JOIN ACCOUNTS
	ON MonthlyBalance.ActID = Accounts.ActID
	INNER JOIN AccountTypes
	ON Accounts.ActTypeID = AccountTypes.ActTypeID
	WHERE  MonthlyBalance.Mth =#mth# AND
	MonthlyBalance.Yr = #yr# 
	 AND MonthlyBalance.ActID IN (SELECT 
	 BudgetDetail.ActID FROM BudgetDetail WHERE BudgetDetail.Mth=#mth# AND
	BudgetDetail.BudgetId = #budgetId#)
	GROUP BY MonthlyBalance.Mth) Actual
	ON Budget.Mth = Actual.Mth
    </select>
  
  <select id="getLiabilityTotalForMonth" parameterClass="budgetDetail"
                                       resultClass="java.lang.String">    
    
    SELECT SUM(MonthlyBalance.ActBalance)
	FROM MonthlyBalance
	 INNER JOIN Accounts
	  ON MonthlyBalance.ActID = Accounts.ActID
	 INNER JOIN AccountTypes
	  ON Accounts.ActTypeID = AccountTypes.ActTypeID
	WHERE Yr=#yr#
	 AND Mth=#mth#
	 AND AccountTypes.ActTypeName='Liability'
   </select>
   
    <select id="getIncomeTotalForMonth" parameterClass="budgetDetail"
                                       resultClass="java.lang.String">    
    
    SELECT SUM(MonthlyBalance.ActBalance)
	FROM MonthlyBalance
	 INNER JOIN Accounts
	  ON MonthlyBalance.ActID = Accounts.ActID
	 INNER JOIN AccountTypes
	  ON Accounts.ActTypeID = AccountTypes.ActTypeID
	WHERE Yr=#yr#
	 AND Mth=#mth#
	 AND AccountTypes.ActTypeName='Income'
   </select>
   
     <select id="getExpenseTotalForMonth" parameterClass="budgetDetail"
                                       resultClass="java.lang.String">    
    
    SELECT SUM(MonthlyBalance.ActBalance)
	FROM MonthlyBalance
	 INNER JOIN Accounts
	  ON MonthlyBalance.ActID = Accounts.ActID
	 INNER JOIN AccountTypes
	  ON Accounts.ActTypeID = AccountTypes.ActTypeID
	WHERE Yr=#yr#
	 AND Mth=#mth#
	 AND AccountTypes.ActTypeName='Expense'
   </select>
   
   <update id="updateBudgetDetail" parameterClass="budgetDetail">
  	UPDATE BudgetDetail 
  	 SET Amount=#amount#
	 WHERE BudgetId=#budgetId#
	  AND ActId=#actId#
	  AND Mth=#mth#
   </update>
   
   
    <select id="getBudgetDetail" parameterClass="budgetDetail"
                                       resultClass="budgetDetail">    
    
      SELECT BudgetID as budgetId, 
	  ActId as actId,
	  ActName as actName,
	  Mth as mth,
	  Amount as amount
	 FROM BudgetDetail
	  INNER JOIN Accounts
	   ON BudgetDetail.ActId = Accounts.ActId
	  WHERE BudgetDetail.Mth=#mth# AND
	   BudgetDetail.BudgetId = #budgetId#  AND
	     BudgetDetail.ActID = #actId#
	  ORDER BY ActName;
   </select>
   
   <select id="getBudgetDetailByName" parameterClass="budgetDetail"
                                       resultClass="budgetDetail">    
      SELECT BudgetID as budgetId, 
	  ActId as actId,
	  ActName as actName,
	  Mth as mth,
	  Amount as amount
	 FROM BudgetDetail
	  INNER JOIN Accounts
	   ON BudgetDetail.ActId = Accounts.ActId
	  WHERE
	   BudgetDetail.BudgetId = #budgetId#  AND
	     Accounts.ActName = #actName#
	  ORDER BY ActName;
   </select>
   
    <update id="updateAccountForBudget" parameterClass="budgetDetail">
  	UPDATE BudgetDetail 
  	 SET Amount= #amount#
  	  WHERE BudgetId=#budgetId#
  	   AND ActId = #actId#
   </update>
   
   <select id="getBudgetTotalForMonth" parameterClass="budgetDetail"
                                       resultClass="java.lang.String">        
      SELECT 
	  	SUM(Amount)
	 FROM BudgetDetail
	  WHERE BudgetDetail.Mth=#mth# AND
	   BudgetDetail.BudgetId = #budgetId#
   </select>
   
    <delete id="deleteAccountFromBudget" parameterClass="budgetDetail">
	    DELETE FROM BudgetDetail
    	  WHERE ActId = #actId#
    	  	AND BudgetId = #budgetId#
   </delete>
</sqlMap>
